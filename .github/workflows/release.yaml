---
name: Release
on:
  push:
    branches:
      - 459-create-release-workflow-for-contracts_2

permissions:
  actions: read|write|none
  checks: read|write|none
  contents: read|write|none
  deployments: read|write|none
  id-token: read|write|none
  issues: read|write|none
  discussions: read|write|none
  packages: read|write|none
  pages: read|write|none
  pull-requests: read|write|none
  repository-projects: read|write|none
  security-events: read|write|none
  statuses: read|write|none
  
jobs:
  build_javascore:
    name: Build Javascore Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build Javascore Contracts
        working-directory: contracts/javascore
        run: |
          ./gradlew clean build
          ./gradlew optimizedJar
          ./gradlew zipOutputOptimizedJars
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: javascore-contracts
          path: ./contracts/javascore/build/javascore-contracts.zip
  build_wasm:
    name: Build Cosmwasm Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.69.0
          target: wasm32-unknown-unknown
          override: true
          profile: minimal
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      - name: Compile WASM
        run: |
          rustup component add rustfmt --toolchain 1.69.0-x86_64-unknown-linux-gnu
          rustup component add clippy --toolchain 1.69.0-x86_64-unknown-linux-gnu     
          bash ./scripts/optimize-cosmwasm.sh
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cosmwasm-contracts
          path: artifacts
  release:
    name: Release and Publish
    runs-on: ubuntu-latest
    needs:
      - build_javascore
      - build_wasm
    steps:
      - name: Initialize variables
        id: vars
        run: |
          echo «::set-output name=date::$(date +'%Y-%m-%d')»
          echo «::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)»
      - name: Download Javascore Artifacts
        uses: actions/download-artifact@v2
        with:
          name: javascore-contracts
          path: javascore-contracts

      - name: Download Cosmwasm Artifacts
        uses: actions/download-artifact@v2
        with:
          name: cosmwasm-contracts
          path: cosmwasm-contracts

      - name: List of files
        run: ls
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pre-release-artifacts
          path: .
